unbind r
bind r source-file ~/.config/tmux/tmux.conf

# bind-key y run-shell "tmux new-window 'yazi .'"
# bind-key Y run-shell "tmux new-window 'yazi ~'"

unbind x
bind x kill-pane

# session binds
unbind -
bind - switch-client -l

unbind o 
bind o switch-client -p

unbind i
bind i switch-client -n

set -g prefix C-space
set -g escape-time 20
set -g mouse on

set -g status-keys vi
set -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
set -g status-position top 
set -g base-index 1
set -g renumber-windows on
set -g pane-border-lines simple

set-window-option -g mode-keys vi
bind k copy-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi C-v send-keys -X begin-selection \; send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

bind-key -T copy-mode-vi Y send-keys -X select-line \; send-keys -X copy-pipe-and-cancel 'wl-copy'

bind-key y run-shell "tmux capture-pane -p | tail -1 | wl-copy"

bind-key -T copy-mode-vi W send-keys -X select-word \; send-keys -X copy-pipe-and-cancel 'wl-copy'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin '2kabhishek/tmux2k'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'

set -g @tmux2k-theme 'onedark'
set -g @tmux2k-icons-only true
set -g status-interval 5
set -g @tmux2k-refresh-rate 10
set -g default-terminal 'tmux-256color'
set-option -sa terminal-features ',XXX:RGB'
set-option -sa terminal-overrides "terminal-256color"
set-option -g  default-terminal "xterm-256color" 
set-option -ga terminal-overrides ",tmux-256color:Tc"
set-option -ga terminal-overrides ",*256col*:Tc"

# set -g default-terminal '${TERM}'
# set -sg terminal-overrides ",*:RGB"

set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'

# bind f new-window -n sessionizer "bash ~/dotfiles/tmux/.config/tmux/scripts/tmux-sessionizer"
bind-key -r f new-window -n sessionizer "bash ~/dotfiles/tmux/.config/tmux/scripts/tmux-sessionizer"
bind-key w run-shell "~/dotfiles/tmux/.config/tmux/scripts/tmux-windowizer"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"
run '~/.config/tmux/plugins/tpm/tpm'

